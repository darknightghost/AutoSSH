#! /usr/bin/env python3

'''
      Copyright 2017, 王思远 <darknightghost.cn@gmail.com>
      This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
      You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
'''

import os
import sys
import paramiko

def main(argv):
    #Get arguments
    if len(argv) != 2:
        usage(argv[0])
        return -1

    elif argv[1] == "-h":
        usage(argv[0])
        return 0

    #Load file
    print("Loading config...")
    try:
        f = open(argv[1])

    except IOError:
        print("Unable to open file:%s."%(argv[1]))

    src = f.read()
    f.close()

    #Compile file
    try:
        c_src = compile(src, argv[1], "exec")

    except SyntaxError:
        print("Illegal python source file!"%(argv[1]))

    vars = {}
    exec(c_src, vars, vars)
    
    #Test variables
    if not ("host" in vars):
        print("Missing variable \"host\".")
        return -1

    host = vars["host"]

    if not ("usrname" in vars):
        print("Missing variable \"usrname\".")
        return -1

    usrname = vars["usrname"]

    if not ("passwd" in vars):
        print("Missing variable \"passwd\".")
        return -1

    passwd = vars["passwd"]

    port = 22
    if "port" in vars:
        port = vars["port"]

    encoding = "utf-8"
    if "encoding" in vars:
        encoding = vars["encoding"]

    if not ("prompt" in vars):
        print("Missing variable \"prompt\".")
        return -1

    prompt = vars["prompt"]

    if not ("commands" in vars):
        print("Missing variable \"commands\".")
        return -1

    commands = vars["commands"]

    #Connect ssh
    print("Connecting %s@%s..."%(usrname, host))
    client, channel = ssh_connect(host, usrname, passwd)
    while True:
        data, result = ssh_recv(channel, prompt)
        sys.stdout.write(data.decode(encoding))
        if result:
            break
    
    #Execute commands
    for c in commands:
        ssh_send(channel, c[0])
        while True:
            try:
                data, result = ssh_recv(channel, c[1])
                sys.stdout.write(data.decode(encoding))
                if result:
                    break
            except KeyboardInterrupt:
                ssh_send(channel, "\x03")

    channel.close()
    client.close()

def usage(name):
    print("Usage:")
    print("\t%s command-list"%(name))
    return

def ssh_connect(host, usrname, passwd, port = 22):
    #Connect host
    client = paramiko.SSHClient()
    client.set_missing_host_key_policy(paramiko.AutoAddPolicy)
    client.connect(host, port, usrname, passwd )

    #Open shell
    term_sz = os.get_terminal_size()
    channel = client.invoke_shell(width = term_sz.columns, 
            height = term_sz.lines)
    return client, channel

def ssh_send(channel, s):
    return channel.send(s)

recv_buf = b""
def ssh_recv(channel, prompt, encoding = "utf-8"):
    #Receive data
    global recv_buf
    data = channel.recv(-1)
    recv_buf += data

    #Test prompt
    prompt_tested = False

    if prompt.encode(encoding) in recv_buf:
        prompt_tested = True
        recv_buf = b""

    return data, prompt_tested

ret = main(sys.argv)
print("")
exit(ret)
